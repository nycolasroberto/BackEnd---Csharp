// <auto-generated />
using System;
using GameCatalog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameCatalog.Migrations
{
    [DbContext(typeof(GameContext))]
    partial class GameContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("GameCatalog.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Jogos de ação e aventura",
                            Nome = "Ação"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Jogos de interpretação de papéis",
                            Nome = "RPG"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Jogos de estratégia e simulação",
                            Nome = "Estratégia"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Jogos de corrida e simulação de direção",
                            Nome = "Corrida"
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Jogos de esportes em geral",
                            Nome = "Esportes"
                        });
                });

            modelBuilder.Entity("GameCatalog.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Desenvolvedor")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            DataLancamento = new DateTime(2017, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Um épico jogo de aventura em mundo aberto",
                            Desenvolvedor = "Nintendo EPD",
                            Nome = "The Legend of Zelda: Breath of the Wild",
                            Preco = 59.99m
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 2,
                            DataLancamento = new DateTime(2015, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "RPG de fantasia medieval com escolhas morais complexas",
                            Desenvolvedor = "CD Projekt RED",
                            Nome = "The Witcher 3: Wild Hunt",
                            Preco = 39.99m
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 3,
                            DataLancamento = new DateTime(2016, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Jogo de estratégia por turnos para construir impérios",
                            Desenvolvedor = "Firaxis Games",
                            Nome = "Civilization VI",
                            Preco = 49.99m
                        });
                });

            modelBuilder.Entity("GameCatalog.Models.Game", b =>
                {
                    b.HasOne("GameCatalog.Models.Category", "Categoria")
                        .WithMany("Games")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("GameCatalog.Models.Category", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
